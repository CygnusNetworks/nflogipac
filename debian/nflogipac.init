#!/bin/sh
### BEGIN INIT INFO
# Provides:          nflogipac
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      mysql
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: NFLOG IP accounting daemon
# Description:       An iptables NFLOG based IP version 4 and 6 traffic
#                    accounting daemon.
### END INIT INFO

# Author: Helmut Grohne <h.grohne@cygnusnetworks.de>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="NFLOG IP accounting daemon"
NAME=nflogipac
DAEMON=/usr/sbin/nflogipacd.py
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
# According to LSB we should be returning 5 (program not installed).
# http://refspecs.freestandards.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
# Debian policy overrides this to be 0.
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

test "$NFLOGIPAC_ENABLE" = "true" || exit 0
if ! test -f "$NFLOGIPAC_CONFIG"; then
	log_failure_msg "Cannot find configuration $NFLOGIPAC_CONFIG."
	# According to LSB we should be returning 6 (program not configured).
	# However that would make the postinst of the Debian package fail.
	exit 0
fi



#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon --start --quiet --pidfile $PIDFILE --background \
			--make-pidfile --startas $DAEMON \
			-- "$NFLOGIPAC_CONFIG" \
		|| return 2
	return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --quiet --pidfile $PIDFILE --retry=TERM/5 \
		|| return 2
	rm -f $PIDFILE
	return 0
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
